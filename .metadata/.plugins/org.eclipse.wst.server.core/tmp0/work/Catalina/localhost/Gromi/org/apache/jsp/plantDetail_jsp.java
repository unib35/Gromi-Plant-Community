/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-05-19 14:31:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.InputStream;
import java.net.URLEncoder;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import java.net.URL;

public final class plantDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("org.w3c.dom.NodeList");
    _jspx_imports_classes.add("org.w3c.dom.Element");
    _jspx_imports_classes.add("org.w3c.dom.Document");
    _jspx_imports_classes.add("java.net.URL");
    _jspx_imports_classes.add("org.w3c.dom.Node");
    _jspx_imports_classes.add("javax.xml.parsers.DocumentBuilderFactory");
    _jspx_imports_classes.add("java.io.InputStream");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>실내정원용 식물</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<h4><strong> * 샘플화면은 디자인을 적용하지 않았으니, 개별 사이트의 스타일에 맞게 코딩하시기 바랍니다.</strong></h4>\n");
      out.write("<h3><strong>실내정원용 식물</strong></h3>\n");
      out.write("<hr>\n");

//인테러뱅 상세조회

	//apiKey - 농사로 Open API에서 신청 후 승인되면 확인 가능
	String apiKey="20230515VN8CNCH8ORIYINXEMQ8CPA";
	//서비스 명
	String serviceName="garden";
	//오퍼레이션 명
	String operationName="gardenDtl";
	
	//XML 받을 URL 생성
	String parameter = "/"+serviceName+"/"+operationName;
	parameter += "?apiKey="+ apiKey;
	parameter += "&cntntsNo="+ request.getParameter("cntntsNo");
	
	//서버와 통신
	URL apiUrl = new URL("http://api.nongsaro.go.kr/service"+parameter);
	InputStream apiStream = apiUrl.openStream();
	
	Document doc = null;
	try{
		//xml document
		doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(apiStream);
	}catch(Exception e){
		e.printStackTrace();
	}finally{
		apiStream.close();
	}
	String resultCode="";
	String resultMsg="";
	try{resultCode = doc.getElementsByTagName("resultCode").item(0).getFirstChild().getNodeValue();}catch(Exception e){resultCode = "";}
	try{resultMsg = doc.getElementsByTagName("resultMsg").item(0).getFirstChild().getNodeValue();}catch(Exception e){resultMsg = "";}
	
	
	//콘텐츠 번로 
	String cntntsNo             =""; 
	//식물 학명         
	String plntbneNm            =""; 
	//식물 영명        
	String plntzrNm             =""; 
	//유통 명                 
	String distbNm              =""; 
	//과명                  
	String fmlNm                =""; 
	//원산지 명           
	String orgplceInfo          =""; 
	//조언 정보                  
	String adviseInfo           =""; 
	//이미지 평가 링크 명          
	String imageEvlLinkCours    =""; 
	//성장 높이 정보               
	String growthHgInfo         =""; 
	//성장 넓이 정보              
	String growthAraInfo        =""; 
	//잎 형태 정보             
	String lefStleInfo          =""; 
	//냄새 코드               
	String smellCode            =""; 
	//독정 정보                 
	String toxctyInfo           =""; 
	//번식 시기             
	String prpgtEraInfo         =""; 
	//기타 시기 정보             
	String etcEraInfo           =""; 
	//관리수준 코드          
	String managelevelCode      =""; 
	//생장속도 코드             
	String grwtveCode           =""; 
	//생육 온도 코드        
	String grwhTpCode           =""; 
	//겨울 최저 온도 코드         
	String winterLwetTpCode     =""; 
	//습도 코드    
	String hdCode               =""; 
	//비료 정보                 
	String frtlzrInfo           =""; 
	//토양 정보           
	String soilInfo             =""; 
	//물주기 봄 코드          
	String watercycleSprngCode  =""; 
	//물주기 여름 코드            
	String watercycleSummerCode =""; 
	//물주기 가을 코드            
	String watercycleAutumnCode =""; 
	//물주기 겨울 코드               
	String watercycleWinterCode =""; 
	//병충해 관리 정보          
	String dlthtsManageInfo     =""; 
	//특별관리 정보              
	String speclmanageInfo      =""; 
	//기능성 정보                 
	String fncltyInfo           =""; 
	//화분직경 대 정보       
	String flpodmtBigInfo       =""; 
	//화분직경 중 정보              
	String flpodmtMddlInfo      =""; 
	//화분직경 소 정보                
	String flpodmtSmallInfo     =""; 
	//가로 대 정보                  
	String widthBigInfo         =""; 
	//가로 중 정보                 
	String widthMddlInfo        =""; 
	//가로 소 정보                  
	String widthSmallInfo       =""; 
	//세로 대 정보                 
	String vrticlBigInfo        =""; 
	//세로 중 정보                
	String vrticlMddlInfo       =""; 
	//세로 소 정보                   
	String vrticlSmallInfo      =""; 
	//높이 대 정보                 
	String hgBigInfo            =""; 
	//높이 중 정보                    
	String hgMddlInfo           =""; 
	//높이 소 정보                  
	String hgSmallInfo          =""; 
	//볼륨 대 정보                   
	String volmeBigInfo         =""; 
	//볼륨 중 정보                   
	String volmeMddlInfo        =""; 
	//볼륨 소 정보                  
	String volmeSmallInfo       =""; 
	//가격 대 정보                
	String pcBigInfo            =""; 
	//가격 중 정보               
	String pcMddlInfo           =""; 
	//가격 소 정보                
	String pcSmallInfo          =""; 
	//관리요구도 코드                  
	String managedemanddoCode   =""; 
	
	try{cntntsNo             = doc.getElementsByTagName("cntntsNo").item(0).getFirstChild().getNodeValue();             }catch(Exception e){cntntsNo             = "";}
	try{plntbneNm            = doc.getElementsByTagName("plntbneNm").item(0).getFirstChild().getNodeValue();            }catch(Exception e){plntbneNm            = "";}
	try{plntzrNm             = doc.getElementsByTagName("plntzrNm").item(0).getFirstChild().getNodeValue();             }catch(Exception e){plntzrNm             = "";}
	try{distbNm              = doc.getElementsByTagName("distbNm").item(0).getFirstChild().getNodeValue();              }catch(Exception e){distbNm              = "";}
	try{fmlNm                = doc.getElementsByTagName("fmlNm").item(0).getFirstChild().getNodeValue();                }catch(Exception e){fmlNm                = "";}
	try{orgplceInfo          = doc.getElementsByTagName("orgplceInfo").item(0).getFirstChild().getNodeValue();          }catch(Exception e){orgplceInfo          = "";}
	try{adviseInfo           = doc.getElementsByTagName("adviseInfo").item(0).getFirstChild().getNodeValue();           }catch(Exception e){adviseInfo           = "";}
	try{imageEvlLinkCours    = doc.getElementsByTagName("imageEvlLinkCours").item(0).getFirstChild().getNodeValue();    }catch(Exception e){imageEvlLinkCours    = "";}
	try{growthHgInfo         = doc.getElementsByTagName("growthHgInfo").item(0).getFirstChild().getNodeValue();         }catch(Exception e){growthHgInfo         = "";}
	try{growthAraInfo        = doc.getElementsByTagName("growthAraInfo").item(0).getFirstChild().getNodeValue();        }catch(Exception e){growthAraInfo        = "";}
	try{lefStleInfo          = doc.getElementsByTagName("lefStleInfo").item(0).getFirstChild().getNodeValue();          }catch(Exception e){lefStleInfo          = "";}
	try{smellCode            = doc.getElementsByTagName("smellCode").item(0).getFirstChild().getNodeValue();            }catch(Exception e){smellCode            = "";}
	try{toxctyInfo           = doc.getElementsByTagName("toxctyInfo").item(0).getFirstChild().getNodeValue();           }catch(Exception e){toxctyInfo           = "";}
	try{prpgtEraInfo         = doc.getElementsByTagName("prpgtEraInfo").item(0).getFirstChild().getNodeValue();         }catch(Exception e){prpgtEraInfo         = "";}
	try{etcEraInfo           = doc.getElementsByTagName("etcEraInfo").item(0).getFirstChild().getNodeValue();           }catch(Exception e){etcEraInfo           = "";}
	try{managelevelCode      = doc.getElementsByTagName("managelevelCode").item(0).getFirstChild().getNodeValue();      }catch(Exception e){managelevelCode      = "";}
	try{grwtveCode           = doc.getElementsByTagName("grwtveCode").item(0).getFirstChild().getNodeValue();           }catch(Exception e){grwtveCode           = "";}
	try{grwhTpCode           = doc.getElementsByTagName("grwhTpCode").item(0).getFirstChild().getNodeValue();           }catch(Exception e){grwhTpCode           = "";}
	try{winterLwetTpCode     = doc.getElementsByTagName("winterLwetTpCode").item(0).getFirstChild().getNodeValue();     }catch(Exception e){winterLwetTpCode     = "";}
	try{hdCode               = doc.getElementsByTagName("hdCode").item(0).getFirstChild().getNodeValue();               }catch(Exception e){hdCode               = "";}
	try{frtlzrInfo           = doc.getElementsByTagName("frtlzrInfo").item(0).getFirstChild().getNodeValue();           }catch(Exception e){frtlzrInfo           = "";}
	try{soilInfo             = doc.getElementsByTagName("soilInfo").item(0).getFirstChild().getNodeValue();             }catch(Exception e){soilInfo             = "";}
	try{watercycleSprngCode  = doc.getElementsByTagName("watercycleSprngCode").item(0).getFirstChild().getNodeValue();  }catch(Exception e){watercycleSprngCode  = "";}
	try{watercycleSummerCode = doc.getElementsByTagName("watercycleSummerCode").item(0).getFirstChild().getNodeValue(); }catch(Exception e){watercycleSummerCode = "";}
	try{watercycleAutumnCode = doc.getElementsByTagName("watercycleAutumnCode").item(0).getFirstChild().getNodeValue(); }catch(Exception e){watercycleAutumnCode = "";}
	try{watercycleWinterCode = doc.getElementsByTagName("watercycleWinterCode").item(0).getFirstChild().getNodeValue(); }catch(Exception e){watercycleWinterCode = "";}
	try{dlthtsManageInfo     = doc.getElementsByTagName("dlthtsManageInfo").item(0).getFirstChild().getNodeValue();     }catch(Exception e){dlthtsManageInfo     = "";}
	try{speclmanageInfo      = doc.getElementsByTagName("speclmanageInfo").item(0).getFirstChild().getNodeValue();      }catch(Exception e){speclmanageInfo      = "";}
	try{fncltyInfo           = doc.getElementsByTagName("fncltyInfo").item(0).getFirstChild().getNodeValue();           }catch(Exception e){fncltyInfo           = "";}
	try{flpodmtBigInfo       = doc.getElementsByTagName("flpodmtBigInfo").item(0).getFirstChild().getNodeValue();       }catch(Exception e){flpodmtBigInfo       = "";}
	try{flpodmtMddlInfo      = doc.getElementsByTagName("flpodmtMddlInfo").item(0).getFirstChild().getNodeValue();      }catch(Exception e){flpodmtMddlInfo      = "";}
	try{flpodmtSmallInfo     = doc.getElementsByTagName("flpodmtSmallInfo").item(0).getFirstChild().getNodeValue();     }catch(Exception e){flpodmtSmallInfo     = "";}
	try{widthBigInfo         = doc.getElementsByTagName("widthBigInfo").item(0).getFirstChild().getNodeValue();         }catch(Exception e){widthBigInfo         = "";}
	try{widthMddlInfo        = doc.getElementsByTagName("widthMddlInfo").item(0).getFirstChild().getNodeValue();        }catch(Exception e){widthMddlInfo        = "";}
	try{widthSmallInfo       = doc.getElementsByTagName("widthSmallInfo").item(0).getFirstChild().getNodeValue();       }catch(Exception e){widthSmallInfo       = "";}
	try{vrticlBigInfo        = doc.getElementsByTagName("vrticlBigInfo").item(0).getFirstChild().getNodeValue();        }catch(Exception e){vrticlBigInfo        = "";}
	try{vrticlMddlInfo       = doc.getElementsByTagName("vrticlMddlInfo").item(0).getFirstChild().getNodeValue();       }catch(Exception e){vrticlMddlInfo       = "";}
	try{vrticlSmallInfo      = doc.getElementsByTagName("vrticlSmallInfo").item(0).getFirstChild().getNodeValue();      }catch(Exception e){vrticlSmallInfo      = "";}
	try{hgBigInfo            = doc.getElementsByTagName("hgBigInfo").item(0).getFirstChild().getNodeValue();            }catch(Exception e){hgBigInfo            = "";}
	try{hgMddlInfo           = doc.getElementsByTagName("hgMddlInfo").item(0).getFirstChild().getNodeValue();           }catch(Exception e){hgMddlInfo           = "";}
	try{hgSmallInfo          = doc.getElementsByTagName("hgSmallInfo").item(0).getFirstChild().getNodeValue();          }catch(Exception e){hgSmallInfo          = "";}
	try{volmeBigInfo         = doc.getElementsByTagName("volmeBigInfo").item(0).getFirstChild().getNodeValue();         }catch(Exception e){volmeBigInfo         = "";}
	try{volmeMddlInfo        = doc.getElementsByTagName("volmeMddlInfo").item(0).getFirstChild().getNodeValue();        }catch(Exception e){volmeMddlInfo        = "";}
	try{volmeSmallInfo       = doc.getElementsByTagName("volmeSmallInfo").item(0).getFirstChild().getNodeValue();       }catch(Exception e){volmeSmallInfo       = "";}
	try{pcBigInfo            = doc.getElementsByTagName("pcBigInfo").item(0).getFirstChild().getNodeValue();            }catch(Exception e){pcBigInfo            = "";}
	try{pcMddlInfo           = doc.getElementsByTagName("pcMddlInfo").item(0).getFirstChild().getNodeValue();           }catch(Exception e){pcMddlInfo           = "";}
	try{pcSmallInfo          = doc.getElementsByTagName("pcSmallInfo").item(0).getFirstChild().getNodeValue();          }catch(Exception e){pcSmallInfo          = "";}
	try{managedemanddoCode   = doc.getElementsByTagName("managedemanddoCode").item(0).getFirstChild().getNodeValue();   }catch(Exception e){managedemanddoCode   = "";}
	
	if(resultCode.equals("00")){

      out.write("\n");
      out.write("	<table  border=\"1\" cellspacing=\"0\" cellpadding=\"0\">\n");
      out.write("		<colgroup>\n");
      out.write("			<col width=\"15%\">\n");
      out.write("			<col width=\"*\">\n");
      out.write("		</colgroup>\n");
      out.write("		<tr>\n");
      out.write("            <th>식물학명</th>\n");
      out.write("            <td>");
      out.print(plntbneNm);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>식물영명</th>\n");
      out.write("            <td>");
      out.print(plntzrNm);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>유통명</th>\n");
      out.write("            <td>");
      out.print(distbNm);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>과명</th>\n");
      out.write("            <td>");
      out.print(fmlNm);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>원산지 정보</th>\n");
      out.write("            <td>");
      out.print(orgplceInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>조언 정보</th>\n");
      out.write("            <td>");
      out.print(adviseInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>이미지 평가 링크 경로</th>\n");
      out.write("            <td>");
      out.print(imageEvlLinkCours);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>성장 높이 정보</th>\n");
      out.write("            <td>");
      out.print(growthHgInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>성장 넓이 정보</th>\n");
      out.write("            <td>");
      out.print(growthAraInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>잎 형태 정보</th>\n");
      out.write("            <td>");
      out.print(lefStleInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>냄새 코드</th>\n");
      out.write("            <td>");
      out.print(smellCode);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>독성 정보</th>\n");
      out.write("            <td>");
      out.print(toxctyInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>번식 시기 정보</th>\n");
      out.write("            <td>");
      out.print(prpgtEraInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>기타 시기 정보</th>\n");
      out.write("            <td>");
      out.print(etcEraInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>관리수준 코드</th>\n");
      out.write("            <td>");
      out.print(managelevelCode);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>생장속도 코드</th>\n");
      out.write("            <td>");
      out.print(grwtveCode);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>생육 온도 코드</th>\n");
      out.write("            <td>");
      out.print(grwhTpCode);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>겨울 최저 온도 코드</th>\n");
      out.write("            <td>");
      out.print(winterLwetTpCode);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>습도 코드</th>\n");
      out.write("            <td>");
      out.print(hdCode);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>비료 정보</th>\n");
      out.write("            <td>");
      out.print(frtlzrInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>토양 정보</th>\n");
      out.write("            <td>");
      out.print(soilInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>물주기 봄 코드</th>\n");
      out.write("            <td>");
      out.print(watercycleSprngCode);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>물주기 여름 코드</th>\n");
      out.write("            <td>");
      out.print(watercycleSummerCode);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>물주기 가을 코드</th>\n");
      out.write("            <td>");
      out.print(watercycleAutumnCode);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>물주기 겨울 코드</th>\n");
      out.write("            <td>");
      out.print(watercycleWinterCode);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>병충해 관리 정보</th>\n");
      out.write("            <td>");
      out.print(dlthtsManageInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>특별관리 정보</th>\n");
      out.write("            <td>");
      out.print(speclmanageInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>기능성 정보</th>\n");
      out.write("            <td>");
      out.print(fncltyInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>화분직경 대 정보</th>\n");
      out.write("            <td>");
      out.print(flpodmtBigInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>화분직경 중 정보</th>\n");
      out.write("            <td>");
      out.print(flpodmtMddlInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>화분직경 소 정보</th>\n");
      out.write("            <td>");
      out.print(flpodmtSmallInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>가로 대 정보</th>\n");
      out.write("            <td>");
      out.print(widthBigInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>가로 중 정보</th>\n");
      out.write("            <td>");
      out.print(widthMddlInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>가로 소 정보</th>\n");
      out.write("            <td>");
      out.print(widthSmallInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>세로 대 정보</th>\n");
      out.write("            <td>");
      out.print(vrticlBigInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>세로 중 정보</th>\n");
      out.write("            <td>");
      out.print(vrticlMddlInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>세로 소 정보</th>\n");
      out.write("            <td>");
      out.print(vrticlSmallInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>높이 대 정보</th>\n");
      out.write("            <td>");
      out.print(hgBigInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>높이 중 정보</th>\n");
      out.write("            <td>");
      out.print(hgMddlInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>높이 소 정보</th>\n");
      out.write("            <td>");
      out.print(hgSmallInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>볼륨 대 정보</th>\n");
      out.write("            <td>");
      out.print(volmeBigInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>볼륨 중 정보</th>\n");
      out.write("            <td>");
      out.print(volmeMddlInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>볼륨 소 정보</th>\n");
      out.write("            <td>");
      out.print(volmeSmallInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>가격 대 정보</th>\n");
      out.write("            <td>");
      out.print(pcBigInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>가격 중 정보</th>\n");
      out.write("            <td>");
      out.print(pcMddlInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>가격 소 정보</th>\n");
      out.write("            <td>");
      out.print(pcSmallInfo);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("            <th>관리요구도 코드</th>\n");
      out.write("            <td>");
      out.print(managedemanddoCode);
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("	</table>\n");

	}else{
		out.println(resultMsg);
	}

      out.write("\n");
      out.write("<input type=\"button\" onclick=\"javascript:fncList();\" value=\"목록\"/>\n");
      out.write("<form name=\"searchApiForm\">\n");

String[] searchNmArr = {"pageNo", "sType", "sText", "wordType", "word", "lightChkVal", "grwhstleChkVal", "lefcolrChkVal", "lefmrkChkVal", "flclrChkVal", "fmldecolrChkVal", "ignSeasonChkVal", "winterLwetChkVal", "priceType", "priceTypeSel", "waterCycleSel"};
for(int i=0; i<searchNmArr.length; i++){
	out.println("<input type='hidden' name='"+searchNmArr[i]+"' value='"+request.getParameter(searchNmArr[i])+"' />");
}

      out.write("\n");
      out.write("</form>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("//목록이동\n");
      out.write("function fncList(){\n");
      out.write("	with(document.searchApiForm){\n");
      out.write("		method=\"get\";\n");
      out.write("		action = \"gardenList.jsp\";\n");
      out.write("		target = \"_self\";\n");
      out.write("		submit();\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
